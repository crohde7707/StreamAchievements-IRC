!function(e){var t={};function n(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(s,r,function(t){return e[t]}.bind(null,r));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){e.exports=n(1)},function(module,exports,__webpack_require__){const TwitchJS=__webpack_require__(2).default,axios=__webpack_require__(3),io=__webpack_require__(4),token=process.env.TKN,username=process.env.UN,client_id=process.env.CID,{build:build,getCondition:getCondition}=__webpack_require__(5),{chat:chat,chatConstants:chatConstants}=new TwitchJS({token:token,username:username}),port=process.env.PORT||5e3;let channels=[],socket,channelStatus={},subListeners={},resubListeners={},giftSubListeners={},raidListeners={},chatListeners={},requestQueue=[],failedToConnect=[],newSubHandler=(e,t)=>{let n={channel:e,achievementID:subListeners[e].achievement,tier:t.parameters.subPlan,userID:t.tags.userId};requestQueue.push(n)},resubHandler=(e,t)=>{let{cumulativeMonths:n,streakMonths:s,subPlan:r}=t.parameters;resubListeners[e].forEach(a=>{if(0===a.type&&Number.parseInt(a.query)<=s){console.log("  >>> Achievmenet earned: streak");let n={channel:e,type:t.tags.msgId,tier:r,userID:t.tags.userId,achievementID:a.achievement,streak:s};requestQueue.push(n)}else if(1===a.type&&Number.parseInt(a.query)<=n){let s={channel:e,type:t.tags.msgId,tier:r,userID:t.tags.userId,achievementID:a.achievement,cumulative:n};requestQueue.push(s)}})},giftSubHandler=(e,t,n)=>{let s=giftSubListeners[e][n],{months:r,recepientID:a,subPlan:o}=t.parameters,i={channel:e,achievementID:s.achievement,type:t.tags.msgId,gifterID:t.tags.userId,recepientID:recipientId,recepientTotalMonths:r,tier:o};requestQueue.push(i)},raidHandler=e=>{let t=raidListeners[channel],n={channel:channel,achievementID:t,type:e.tags.msgId,userID:e.tags.userId};requestQueue.push(n)},chatHandler=(channel,msg,username)=>{if(channelStatus[channel]["full-access"]&&chatListeners[channel]){let listeners=chatListeners[channel][username];listeners&&(console.log("we have listeners..."),listeners.forEach(listener=>{let regex=new RegExp(listener.query),matches=msg.match(regex);if(matches){let match=!0;console.log(matches.groups);let userValue=matches.groups.value,user=matches.groups.user,{condition:condition,operator:operator,value:value}=listener.condition;if("="===operator&&(operator="==="),eval(userValue+operator+value)){console.log("ACHIEVEMENT EARNED");let e={channel:channel,achievementID:listener.achievement,user:user};requestQueue.push(e)}}}))}};chat.connect(),chat.on("PRIVMSG",e=>{chatHandler(e.channel.substr(1),e.message,e.username)}),chat.on("NOTICE/HOST_ON",e=>{let t=e.channel.substr(1);channelStatus[t]&&(channelStatus[t.toLowerCase()].online=!1,chat.part(t))}),chat.on("USERNOTICE/SUBSCRIPTION",e=>{let t=e.channel.substr(1);subListeners[t]&&newSubHandler(t,e),console.log("------- SUB -------"),console.log(e),console.log("-------------------")}),chat.on("USERNOTICE/RESUBSCRIPTION",e=>{let t=e.channel.substr(1);resubListeners[t]&&resubHandler(t,e),console.log(resubListeners[t]),console.log("------- SUB -------"),console.log(e),console.log("-------------------")}),chat.on("USERNOTICE/SUBSCRIPTION_GIFT",e=>{let t=e.channel.substr(1);totalGifts=e.parameters.senderCount,giftSubListeners[t]&&giftSubListeners[t][totalGifts]&&giftSubHandler(t,e,totalGifts),console.log("------- SUB GIFT -------"),console.log(e),console.log("-------------------")}),chat.on("USERNOTICE/SUBSCRIPTION_GIFT_COMMUNITY",e=>{e.channel.substr(1);console.log("------- SUB GIFT COMMUNITY -------"),console.log(e),console.log("-------------------")}),chat.on("USERNOTICE/RAID",e=>{let t=e.channel.substr(1);raidListeners[t]&&raidHandler(t,e),console.log("------- RAID -------"),console.log(e),console.log("-------------------")});let retrieveChannelListeners=async()=>{let e,t=!0,n=0;for(;t;){let s=await axios.get(process.env.API_DOMAIN+"/api/irc/listeners",{params:{limit:5,offset:n,total:e},withCredentials:!0});s.data.listeners.forEach(e=>{listenerHandler(e,"add")}),e=s.data.total,s.data.offset?n=s.data.offset:t=!1}},listenerHandler=(e,t)=>{let n,s,r=e.channel;if("add"===t)switch(e.code){case"0":subListeners[r]=e;break;case"1":type=e.type,condition=e.condition,resubListeners[r]=resubListeners[r]||[],resubListeners[r].push(e);break;case"2":condition=e.condition,giftSubListeners[r]=giftSubListeners[r]||[],giftSubListeners[r].push(e);break;case"3":raidListeners[r]=e;break;case"4":s=e.bot,chatListeners[r]=chatListeners[r]||{},chatListeners[r][s]=chatListeners[r][s]||[];let t=build(e.query);e.query=t,e.condition=getCondition(e.condition),console.log(e),chatListeners[r][s].push(e)}else if("update"===t)switch(e.code){case"0":subListeners[r]=e;break;case"1":if(type=e.type,n=e.query,resubListeners[r]=resubListeners[r]||[],0===resubListeners[r].length)resubListeners[r].push(e);else{let t=resubListeners[r].findIndex(t=>{t.id,e.id});resubListeners[r].splice(t,1,e)}break;case"2":if(n=e.query,giftSubListeners[r]=giftSubListeners[r]||[],0===giftSubListeners[r].length)giftSubListeners[r].push(e);else{let t=giftSubListeners[r].findIndex(t=>{t.id,e.id});giftSubListeners[r].splice(t,1,e)}break;case"3":raidListeners[r]=e;break;case"4":s=e.bot,chatListeners[r]=chatListeners[r]||{},chatListeners[r][s]=chatListeners[r][s]||[];let t=build(e.query);if(e.query=t,0===chatListeners[r][s].length)chatListeners[r][s].push(e);else{let t=chatListeners[r][s].findIndex(t=>{t.id,e.id});chatListeners[r][s].splice(t,1,e)}}else if("remove"===t)switch(e.code){case"0":delete subListeners[r];break;case"1":if(type=e.type,n=e.query,resubListeners[r]&&resubListeners[r].length>0){let t=resubListeners[r].findIndex(t=>{t.id,e.id});resubListeners[r].splice(t,1)}break;case"2":if(n=e.query,giftSubListeners[r]&&giftSubListeners[r].length>0){let t=giftSubListeners[r].findIndex(t=>{t.id,e.id});giftSubListeners[r].splice(t,1)}break;case"3":delete raidListeners[r];break;case"4":if(s=e.bot,chatListeners[r]&chatListeners[r][s]&&chatListeners[r][s].length>0){let t=chatListeners[r][s].findIndex(t=>{t.id,e.id});chatListeners[r][s].splice(t,1)}}},setup=()=>new Promise((e,t)=>{(socket=io.connect(process.env.API_DOMAIN,{reconnection:!0})).emit("handshake",{name:"SAIRC"}),socket.on("new-channel",e=>{channelStatus[e.name]={name:e.name,"full-access":e["full-access"],online:!1}}),socket.on("new-listener",e=>{console.log("new-listener"),listenerHandler(e,"add")}),socket.on("update-listener",e=>{console.log("update-listener"),listenerHandler(e,"update")}),socket.on("remove-listener",e=>{console.log("remove-listener"),listenerHandler(e,"remove")}),socket.on("become-gold",e=>{channelStatus[e]["full-access"]=!0}),socket.on("remove-gold",e=>{channelStatus[e]["full-access"]=!1}),socket.on("test",e=>{chatHandler(e.channel,e.message,e.username)}),socket.on("achievement-awarded",e=>{chat.action(e.channel,`${e.member} just earned the "${e.achievement}" achievement!`)}),socket.on("achievement-awarded-nonMember",e=>{chat.action(e.channel,`${e.member} just earned the "${e.achievement}" achievement!`)}),axios.get(process.env.API_DOMAIN+"/api/irc/channels",{withCredentials:!0}).then(t=>{(channels=t.data.channels).forEach(e=>{channelStatus[e.name]={name:e.name,"full-access":e["full-access"],online:!1}}),e()})});setup().then(()=>{console.log("==========================="),console.log("   IRC IS UP AND RUNNING   "),console.log("==========================="),console.log("\n"),console.log("Channels to watch: "+channels.length),console.log("\n"),retrieveChannelListeners(),channelLiveWatcher()});let connectToStream=e=>{chat.connect().then(t=>{chat.join(e).then(t=>{console.log("*************************"),console.log(">>> STREAM ACHIEVEMENTS IS WATCHING "+e),console.log("*************************"),channelStatus[e]&&(channelStatus[e].online=!0)}).catch(t=>{console.log("[33m%s[0m","issue joining channel"),failedToConnect.push(e)})}).catch(t=>{failedToConnect.push(e),console.log("[33m%s[0m","issue connecting to chat")})},channelLiveWatcher=async()=>{let e=Object.keys(channelStatus).filter(e=>!channelStatus[e].online),t=0,n=!0;for(;n;){let s=await axios.get("https://api.twitch.tv/kraken/streams/",{params:{client_id:client_id,channel:e.join(),limit:50,offset:t}}),r=s.data.streams;r.length>0?(r.forEach(e=>{let t=e.channel.display_name.toLowerCase();connectToStream(t)}),s.data._links.next?t+=50:n=!1):(console.log("No streams online"),n=!1)}let s=failedToConnect.length>0;for(;s;){let e=failedToConnect.splice(0,failedToConnect.length);setTimeout(()=>{e.forEach(connectToStream)},5e3),s=failedToConnect.length>0}},sendAchievements=()=>{if(requestQueue.length>0){let e=requestQueue.slice(0);requestQueue.splice(0,requestQueue.length),console.log("Sending "+e.length+" achievements..."),axios({method:"post",url:process.env.API_DOMAIN+"/api/achievement/listeners",data:e})}};setInterval(channelLiveWatcher,12e4),setInterval(sendAchievements,1e4)},function(e,t){e.exports=require("twitch-js")},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("socket.io-client")},function(e,t){let n={"{user}":/(?<user>[a-zA-Z0-9_]+)/,"{target}":/(?<target>[a-zA-Z0-9_]+)/,"{value}":/(?<value>[0-9]+)/};e.exports={build:e=>{let t=Object.keys(n),s=e;return t.forEach(e=>{s=s.replace(new RegExp(e,"gi"),n[e].source)}),s},getCondition:e=>{if(""===e)return{condition:"occured"};{console.log(e);let t=new RegExp(/(?<condition>[a-zA-Z0-9_]+)(?<operator>[=<>])(?<value>[0-9]+)/);return e.match(t).groups}}}}]);